{"version":3,"sources":["store/actions/actionTypes.js","store/actions/index.js","Todo/Form.js","Todo/Header.js","Todo/TodoList.js","Todo/index.js","store/reducers/index.js","index.js"],"names":["ADD_ITEM","EDIT_ITEM","DELETE_ITEM","SET_TITLE","SET_ITEM","SET_EDIT","SET_ERROR","setTitle","title","type","actionTypes","useStyles","makeStyles","root","marginTop","marginBottom","padding","boxShadow","button","connect","state","edit","error","dispatch","setError","addItem","editItem","item","classes","Container","maxWidth","className","Grid","container","alignItems","md","TextField","value","onChange","event","target","length","helperText","id","fullWidth","label","multiline","variant","Button","color","onClick","toolbar","textAlign","height","heading","margin","Header","AppBar","position","Toolbar","Typography","align","todoList","items","setItem","deleteItem","setEdit","setDone","List","map","ListItem","selected","ListItemIcon","ListItemText","primary","ListItemSecondaryAction","IconButton","edge","aria-label","handleEdit","handleDelete","Todo","initialState","Items","action","newitem","Date","now","concat","newList","index","indexOf","splice","store","createStore","reducer","app","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.57f74288.chunk.js","sourcesContent":["export const ADD_ITEM = \"ADD_ITEM\";\r\nexport const EDIT_ITEM = \"EDIT_ITEM\";\r\nexport const DELETE_ITEM = \"DELETE_ITEM\";\r\n\r\nexport const SET_TITLE = \"SET_TITLE\";\r\nexport const SET_ITEM = \"SET_ITEM\";\r\nexport const SET_EDIT = \"SET_EDIT\";\r\nexport const SET_ERROR = \"SET_ERROR\";","import * as actionTypes from './actionTypes';\r\n\r\nexport const addItem = () => {\r\n    return{ \r\n        type: actionTypes.ADD_ITEM, \r\n    }\r\n}\r\n\r\nexport const deleteItem = (item) => {\r\n    return{ \r\n        type: actionTypes.DELETE_ITEM, \r\n        item: item \r\n    }\r\n}\r\n\r\nexport const editItem = (item) => {\r\n    return{ \r\n        type: actionTypes.EDIT_ITEM, \r\n        item: item \r\n    }\r\n}\r\nexport const setTitle = (title) => {\r\n    return{ \r\n        type: actionTypes.SET_TITLE, \r\n        title: title \r\n    }\r\n}\r\nexport const setError = (error) => {\r\n    return{ \r\n        type: actionTypes.SET_ERROR, \r\n        error: error \r\n    }\r\n}\r\nexport const setItem = (item) => {\r\n    return{ \r\n        type: actionTypes.SET_ITEM, \r\n        item: item \r\n    }\r\n}\r\nexport const setEdit = () => {\r\n    return{ \r\n        type: actionTypes.SET_EDIT\r\n    }\r\n}","import React from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Container from '@material-ui/core/Container';\r\nimport Button from '@material-ui/core/Button'\r\nimport { connect } from 'react-redux'\r\nimport * as actionTypes from '../store/actions';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        marginTop: 16,\r\n        marginBottom: 16,\r\n        padding: 16,\r\n        boxShadow: \"0px 3px 5px -1px rgba(0,0,0,0.2), 0px 6px 10px 0px rgba(0,0,0,0.14), 0px 1px 18px 0px rgba(0,0,0,0.12)\"\r\n    },\r\n    button: {\r\n        marginTop: 16\r\n    }\r\n});\r\n\r\nconst Form = ({ title, setTitle, addItem, editItem, edit, error, setError }) => {\r\n    const classes = useStyles();\r\n    const handleChange = (event) => {\r\n        const title = event.target.value;\r\n        \r\n        setTitle(title);\r\n        if(title.length === 0){\r\n            setError(\"Please enter some task!\");\r\n        }else{\r\n            setError(\"\");\r\n        }\r\n    }\r\n\r\n    const handleClick = () => {\r\n        if(title.length === 0){\r\n            setError(\"Please enter some task!\");\r\n            return;\r\n        }\r\n        if (edit) {\r\n            editItem();\r\n        } else {\r\n            addItem();\r\n        }\r\n    }\r\n    return (\r\n        <Container maxWidth=\"sm\" className={classes.root}>\r\n            <Grid container alignItems=\"center\">\r\n                <Grid item md={12}>\r\n                    <TextField value={title} onChange={handleChange} \r\n                    error={!!error} helperText={error} id=\"outlined-basic\" fullWidth label=\"Add task\" multiline variant=\"outlined\" />\r\n                </Grid>\r\n                <Grid item md={12}>\r\n                    <Button className={classes.button} variant=\"contained\" color=\"primary\" onClick={handleClick}>\r\n                        {edit ? \"Save\" : \"Add\"}\r\n                    </Button>\r\n                </Grid>\r\n            </Grid>\r\n        </Container>\r\n    )\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        title: state.title,\r\n        edit: state.edit,\r\n        error: state.error\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        setTitle: (title) => dispatch(actionTypes.setTitle(title)),\r\n        setError: (error) => dispatch(actionTypes.setError(error)),\r\n        addItem: () => dispatch(actionTypes.addItem()),\r\n        editItem: () => dispatch(actionTypes.editItem()),\r\n\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Form);","import React from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles({\r\n    toolbar: {\r\n        textAlign: \"center\",\r\n        height: 80\r\n    },\r\n    heading: {\r\n        margin: \"auto\"\r\n    }\r\n});\r\n\r\nconst Header = () => {\r\n    const classes = useStyles();\r\n    return (\r\n        <AppBar position=\"static\">\r\n            <Toolbar className={classes.toolbar}>\r\n                <Typography className={classes.heading} variant=\"h5\" align=\"center\">Redux Todo App</Typography>\r\n            </Toolbar>\r\n        </AppBar>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport Container from '@material-ui/core/Container';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport LabelIcon from '@material-ui/icons/Label';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport { connect } from 'react-redux'\r\nimport * as actionTypes from '../store/actions';\r\n\r\nconst useStyles = makeStyles({\r\n    container: {\r\n        padding: 16\r\n    },\r\n    margin: {\r\n        marginBottom: 10\r\n    }\r\n});\r\n\r\nfunction TodoList({ todoList, setTitle, setItem, setEdit, deleteItem, setDone }) {\r\n    const classes = useStyles();\r\n\r\n    const handleEdit = (item) => {\r\n        setTitle(item.value);\r\n        setEdit();\r\n        setItem(item);\r\n    }\r\n\r\n    //const handleDone = (item) => {\r\n    //    setDone();\r\n    //}\r\n\r\n    const handleDelete = (item) => {\r\n        setItem(item);\r\n        deleteItem();\r\n    }\r\n    return (\r\n        <Container className={classes.container} maxWidth=\"md\">\r\n            {!todoList.length\r\n                ?\r\n                <Typography variant=\"h6\" color=\"error\">No tasks to display</Typography>\r\n                :\r\n                (<List>\r\n                    {todoList.map(item => {\r\n                        return (\r\n                            <ListItem key={item.id} button selected className={classes.margin}>\r\n                                <ListItemIcon>\r\n                                    <LabelIcon color=\"primary\" />\r\n                                </ListItemIcon>\r\n\r\n                                <ListItemText primary={item.value} />\r\n                                <ListItemSecondaryAction>\r\n                                    <IconButton edge=\"end\" aria-label=\"edit\" onClick={() => handleEdit(item)}>\r\n                                        <EditIcon />\r\n                                    </IconButton>\r\n                                    <IconButton edge=\"end\" aria-label=\"delete\" onClick={() => handleDelete(item)}>\r\n                                        <DeleteIcon />\r\n                                    </IconButton>\r\n                                </ListItemSecondaryAction>\r\n                            </ListItem>\r\n                        )\r\n                    })}\r\n                </List>)\r\n            }\r\n        </Container>\r\n    )\r\n\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        todoList: state.items\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        setTitle: (title) => dispatch(actionTypes.setTitle(title)),\r\n        setItem: (item) => dispatch(actionTypes.setItem(item)),\r\n        deleteItem: (item) => dispatch(actionTypes.deleteItem(item)),\r\n        setEdit: () => dispatch(actionTypes.setEdit()),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoList);","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Form from './Form';\r\nimport Header from './Header';\r\nimport TodoList from './TodoList';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        textAlign: \"center\",\r\n        height: \"100%\"\r\n    }\r\n});\r\nfunction Todo() {\r\n    const classes = useStyles();\r\n    return (\r\n        <div className={classes.root}>\r\n            <Header />\r\n            <Form />\r\n            <TodoList />\r\n        </div>\r\n    )\r\n}\r\nexport default Todo;","import * as actionTypes from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n    items: [],\r\n    title: \"\",\r\n    item: \"\",\r\n    edit: false,\r\n    error: \"\"\r\n}\r\nconst Items = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.ADD_ITEM:\r\n            const newitem = {\r\n                id: Date.now(),\r\n                value: state.title,\r\n            }\r\n            return {\r\n                ...state,\r\n                items: state.items.concat(newitem),\r\n                title: \"\",\r\n                error: \"\"\r\n            }\r\n\r\n        case actionTypes.EDIT_ITEM:\r\n            var newList = [...state.items];\r\n            var index = newList.indexOf(state.item);\r\n            if (index !== -1) {\r\n                newList[index].value = state.title;\r\n                return {\r\n                    ...state,\r\n                    title: \"\",\r\n                    edit: false,\r\n                    items: newList,\r\n                    error: \"\"\r\n                }\r\n            } else {\r\n                return {\r\n                    ...state\r\n                }\r\n            }\r\n        case actionTypes.DELETE_ITEM:\r\n            newList = [...state.items];\r\n            index = newList.indexOf(state.item);\r\n            if (index !== -1) {\r\n                newList.splice(index, 1);\r\n                return {\r\n                    ...state,\r\n                    items: newList\r\n                }\r\n            } else {\r\n                return {\r\n                    ...state\r\n                }\r\n            }\r\n        case actionTypes.SET_TITLE:\r\n            return {\r\n                ...state,\r\n                title: action.title\r\n            }\r\n        case actionTypes.SET_ITEM:\r\n            return {\r\n                ...state,\r\n                item: action.item,\r\n                error: \"\"\r\n            }\r\n        case actionTypes.SET_ERROR:\r\n            return {\r\n                ...state,\r\n                error: action.error\r\n            }\r\n        case actionTypes.SET_EDIT:\r\n            return {\r\n                ...state,\r\n                edit: true,\r\n                error: \"\"\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default Items;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Todo from './Todo/index';\nimport { Provider } from 'react-redux'\nimport reducer from './store/reducers/index'\nimport { createStore } from 'redux';\n\nconst store = createStore(reducer);\nconst app = (\n  <Provider store={store}>\n      <Todo />\n  </Provider>\n);\n\nReactDOM.render(app, document.getElementById('root'));\n\n"],"sourceRoot":""}